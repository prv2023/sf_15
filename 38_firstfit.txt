def firstfit(mb,p):

    n= len(p)
    m= len(mb)
    allocation= [-1]*n


    for i in range (n):

        for j in range (m):

            if p[i]<= mb[j]:
                allocation[i]=j
                mb[j] -= p[i]
                break
    
    return allocation

memory = []
process = []

memory_count = int(input("Enter the number of memory blocks: "))
for i in range(memory_count):
    memory_size = int(input(f"Enter the size of memory block {i+1}: "))   #f string
    memory.append(memory_size)   #add the size of memory to the end of the respective list

process_count = int(input("Enter the number of processes: "))
for i in range(process_count):
    process_size = int(input(f"Enter the size of process {i+1}: "))
    process.append(process_size)

alloc= firstfit(memory,process)

print("first fit : ",alloc)




